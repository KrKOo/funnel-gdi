// Code generated for package config by go-bindata DO NOT EDIT. (@generated)
// sources:
// config/gridengine-template.txt
// config/pbs-template.txt
// config/slurm-template.txt
// config/kubernetes-executor-template.yaml
// config/default-config.yaml
// config/htcondor-template.txt
// config/kubernetes-template.yaml
package config

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configGridengineTemplateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x4a\xc4\x30\x14\x85\xf7\x79\x8a\x6b\xc7\x59\x26\xed\x0b\xb8\xb2\x30\xb8\x71\x21\x82\x4b\x69\xc9\x0d\x13\x32\xf9\xe1\x26\x51\x30\xe4\xdd\xa5\x69\x11\x0a\x75\x76\x97\xc3\x77\x3e\xb8\xe7\xf4\xd0\xcf\xda\xf5\xf3\x14\xaf\xec\xf4\x08\xfc\x15\x4a\x11\xef\x53\x34\x2f\xb2\xd6\x96\xf8\x25\xf9\xf0\x64\x46\x4d\xb5\xf6\x2a\x3b\x87\x37\x1e\x93\xf4\x39\x35\x00\xff\x03\x90\x88\x95\xa2\x15\x38\x04\xf1\x1c\x72\x84\x01\x78\xad\xac\x94\x40\xda\x25\x05\xdd\x52\x0f\x08\x36\x68\x38\xcb\x6e\x85\x1a\xc0\x01\x9d\x6c\xd7\x56\x7f\x9b\xec\x65\x86\x41\x1c\x19\x6e\x70\xfd\xfc\xb2\x68\x9f\xce\x62\x50\x97\x6e\x83\x8f\x3d\xa3\x8e\xe6\xae\x48\x45\xfd\x83\x7f\xa6\x15\xdf\xa9\xd8\xfa\x20\x7c\x7b\x32\x48\x40\xd9\x01\xe7\x69\x59\x6c\xdc\x6d\xf7\x1b\x00\x00\xff\xff\xcf\x92\x30\x7f\x5a\x01\x00\x00")

func configGridengineTemplateTxtBytes() ([]byte, error) {
	return bindataRead(
		_configGridengineTemplateTxt,
		"config/gridengine-template.txt",
	)
}

func configGridengineTemplateTxt() (*asset, error) {
	bytes, err := configGridengineTemplateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/gridengine-template.txt", size: 346, mode: os.FileMode(384), modTime: time.Unix(1705929562, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configPbsTemplateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd0\xc1\x4a\xc4\x30\x10\xc6\xf1\x7b\x9f\x62\xec\xb2\xc7\xb4\xf5\x2a\xf4\xa2\x05\xf1\x22\xa2\x82\xe7\x86\x4c\x34\xa4\x9d\x84\x49\x82\x87\x90\x77\x97\xdd\x04\x64\xc1\xf5\x16\x86\x3f\x3f\xc8\x77\xb8\x19\xa5\xa1\x51\xae\xe1\xab\x3b\xbc\xdc\xbf\x81\x78\x86\x9c\x87\xf7\x35\xd8\x27\x55\x4a\xbb\xb9\xd3\xed\xc3\xb1\x5d\x0c\x97\x32\xea\x44\x84\x9b\x08\x51\xb9\x14\x5b\x82\xd7\x12\x64\xee\x72\x36\x1a\x08\x61\x78\xf0\x29\xc0\x04\xa2\x94\x2e\x67\xcf\x86\xa2\x86\xbe\x02\x1b\x90\x53\x18\xe6\xdb\x3b\xef\x69\x3e\xaa\xbe\xd6\xe7\x52\x00\x92\x3a\xbf\x9a\xf3\xba\xee\x8f\x12\xa6\xe1\x1a\xb5\xe3\x3e\x1f\x87\x49\x7f\xca\xbe\xc5\x7f\x3b\x8b\x09\xf6\x5f\x48\x9b\x0d\x7f\xa5\x9a\x5f\x50\x5d\xfd\x29\x7c\x3b\xb6\xc8\xc0\x89\x40\x88\x78\x9a\x6f\xb9\x18\xf2\x27\x00\x00\xff\xff\x94\x91\x42\x0b\x69\x01\x00\x00")

func configPbsTemplateTxtBytes() ([]byte, error) {
	return bindataRead(
		_configPbsTemplateTxt,
		"config/pbs-template.txt",
	)
}

func configPbsTemplateTxt() (*asset, error) {
	bytes, err := configPbsTemplateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/pbs-template.txt", size: 361, mode: os.FileMode(384), modTime: time.Unix(1705929562, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configSlurmTemplateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x6a\xc3\x30\x0c\x86\xef\x79\x0a\x2d\xa5\x47\x27\xd9\x23\xac\x0d\x74\xbb\x6e\x85\x9d\x9d\x45\x61\x9e\x67\xd9\x48\x36\x3b\x18\xbf\xfb\x48\x53\x68\x0a\x0b\xbb\x19\xeb\xfb\x3f\xa4\x7f\xf7\xd0\x0e\x86\xda\x41\xcb\x67\xb5\x7b\x3b\x3c\x9d\x8f\xcf\xa0\xd4\x97\x1f\x14\x69\x87\x90\x73\x73\xd6\x62\x5f\xc6\x52\x56\x63\x8a\x5a\xac\xc0\xe3\xea\x0b\x99\x3d\xcf\xf8\xbb\x67\xdb\x1b\x2e\xa5\x9d\x12\x11\x7e\x2b\x89\x23\x32\xaf\x50\x9f\x62\x48\x71\x8b\xf5\x29\x56\x39\x9b\x09\x08\xa1\x39\x86\x24\xd0\x81\x2a\xa5\xca\x39\xb0\xa1\x38\x41\x7d\x33\x7d\x84\x24\x2a\x20\xab\x79\x1f\xd8\x8f\xf5\x92\xb8\xd0\x0a\x90\xc6\xcb\xeb\xea\x7a\xd5\xee\x34\x40\xd7\x6c\xeb\x1c\x3a\xd8\x37\xdd\x74\x3a\xd4\x57\xfc\x6f\x53\x6f\xc4\xfe\xa3\x8a\x2e\xdc\x54\x0b\x7f\xe7\xaa\x96\x83\xe1\xc7\xb3\x45\x06\x4e\x34\x87\xe6\xa6\xfb\xbb\xce\x7f\x03\x00\x00\xff\xff\x71\x9e\x5b\xbd\x9f\x01\x00\x00")

func configSlurmTemplateTxtBytes() ([]byte, error) {
	return bindataRead(
		_configSlurmTemplateTxt,
		"config/slurm-template.txt",
	)
}

func configSlurmTemplateTxt() (*asset, error) {
	bytes, err := configSlurmTemplateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/slurm-template.txt", size: 415, mode: os.FileMode(384), modTime: time.Unix(1705929562, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configKubernetesExecutorTemplateYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x4d\x6f\xda\x40\x10\xbd\xfb\x57\x8c\x4c\x7a\x8b\x8d\xb9\xf4\x60\xa9\x87\x08\x2a\x42\xd4\x10\xd4\xa2\xf4\x50\xf5\xb0\x5e\xc6\xb0\xf5\x7e\x75\x67\x4d\x8a\x2c\xfe\x7b\xb5\xb6\xb1\x4c\xaa\x26\x7b\x1a\xcf\x9b\x79\x6f\xde\x68\x64\x66\xc5\x33\x3a\x12\x46\xe7\x50\x30\xcf\x0f\xd3\xe3\x2c\xaa\x84\xde\xe5\xf0\x60\x8a\x48\xa1\x67\x3b\xe6\x59\x1e\x01\x68\xa6\x30\x87\xa6\x49\xb7\x8c\xaa\xd5\xee\x7c\x4e\x9a\x26\x7d\x30\x45\x08\x7b\x98\x2c\xe3\x5d\xcd\xfa\xf2\xd5\x62\x92\x15\x28\x29\x90\x00\xfc\x32\x45\xf2\x26\x15\x59\xe4\x39\x44\x00\x05\xe3\x95\x29\xcb\x2f\x42\x09\x9f\x43\x16\x01\x70\xa3\xac\x44\x2f\x8c\xa6\x1c\x66\x11\x80\x47\x65\x25\xf3\xd8\x51\xb7\x9d\x6d\x04\xe0\x90\x3c\x73\x7e\x63\xa4\xe0\xa7\x1c\xd6\x78\x44\xd7\x43\xdc\x68\xcf\x84\x46\x47\xad\x4c\x78\x49\xef\xae\xac\xb5\x46\x99\xbc\x18\x57\xa1\x4b\x46\x03\xf6\x75\x00\x42\xb1\x7d\x37\xfb\x2a\x44\xaf\x91\x4d\x2d\xe5\x45\xf3\x4e\xbe\xb0\x13\x0d\x38\x37\x4a\xb1\xb0\xd8\x1f\xf1\xb4\x10\x7a\x4a\x87\xf8\x16\xe2\x84\xc7\x3f\x87\x12\xe6\xf6\xd4\x72\xcf\xbb\xda\x11\x7b\x18\x49\xe8\xfd\x42\xb8\xb6\xe0\xbb\x71\xd5\x4e\xb8\x51\x81\x43\x32\xb5\xe3\x48\xf9\x90\x0a\xc9\xdf\x35\x92\xbf\xca\x01\x70\x5b\x07\x12\x51\x82\x46\x48\xe7\xb6\x26\xc8\x20\x39\x9f\x83\xb0\xad\x29\x04\x80\x92\x10\x42\x14\xcf\xb2\x4c\xc5\x21\xc2\xab\x81\xc2\x53\xa8\x8c\x3b\x8d\xb8\xbe\x32\xb5\x2c\x20\x4b\x7b\x3a\xeb\x84\xf6\x25\xc4\x1f\xd2\xac\x5c\xc6\x3d\xdc\x52\x49\xc2\x8e\xfc\xe3\xe3\x7f\xb8\xd1\x1e\x50\xa1\x63\x32\x21\x6f\x5c\xbf\xf4\x5e\x66\x21\xa8\x7a\x4b\xa7\xc3\xaf\x85\xb2\x6c\xac\x34\x48\x1d\x8d\xac\x15\x3e\x9a\x5a\x8f\xb7\x34\x99\x4c\x60\xf1\x04\xeb\xa7\x2d\xcc\xef\xef\xd6\xcb\xcf\xb0\xbd\x5f\x7d\x1b\xe0\xa6\x71\x4c\xef\x11\x6e\xc4\xee\xcf\x2d\xdc\x08\x8f\x0a\xf2\x4f\x90\x3e\xb7\x64\x34\x72\x72\x39\xac\xde\x03\x8c\x2c\xaa\xa0\xb9\x61\xfe\x10\x8c\xb5\x1c\xe9\xfc\x72\x99\x21\x7d\xb5\x0f\xaa\x8b\xa1\x74\x38\xca\xf7\xda\x5e\x99\xed\xac\xfe\x7b\xf4\xfd\x6c\x43\x9b\x0d\x3f\x04\xf2\xa8\x7d\xe7\x67\x2e\x99\x50\xe3\x0b\xe2\x21\xb1\x1e\xf7\x26\xf6\xc8\xe1\x6f\x00\x00\x00\xff\xff\x1a\xb2\xe9\x0d\x4c\x04\x00\x00")

func configKubernetesExecutorTemplateYamlBytes() ([]byte, error) {
	return bindataRead(
		_configKubernetesExecutorTemplateYaml,
		"config/kubernetes-executor-template.yaml",
	)
}

func configKubernetesExecutorTemplateYaml() (*asset, error) {
	bytes, err := configKubernetesExecutorTemplateYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/kubernetes-executor-template.yaml", size: 1100, mode: os.FileMode(384), modTime: time.Unix(1705929562, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configDefaultConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x6f\x1b\x39\x92\x7f\xef\xbf\xa2\xce\x9e\xc5\x26\x80\xbe\x3c\x83\xd9\xbb\x15\xe0\x07\x7f\x4d\xe2\x8d\x93\xe8\x2c\xe5\x72\xf7\x14\xb0\x9b\xd5\x6a\x8e\xba\xc9\x1e\x92\x2d\x45\xc9\xe5\x7f\x3f\x54\x91\xfd\x21\xdb\x99\x64\x76\x1d\x20\xc0\x4d\x5e\x62\x91\xc5\x62\xb1\xbe\xf8\xab\x62\x1f\xc3\xaa\x40\xd0\xa2\x42\x30\x39\xf8\x02\x41\x64\x5e\x6d\x11\x1c\xda\x2d\x5a\x90\xc2\x8b\x54\x38\x84\x54\x64\x1b\xd4\x32\x39\x86\xb3\xad\x50\xa5\x48\xcb\x6e\xcc\xcd\x21\x35\xa5\x97\xe9\x08\x52\x21\xd7\x68\x47\xbc\xcc\x79\x63\x71\x04\x72\xaf\x45\x65\x68\x12\x4b\xe1\xbc\xca\x46\x50\x19\xbd\x36\x32\x4d\x2e\x23\xf3\x76\x7d\x92\x7c\x56\x9c\xcc\x54\x75\xe3\xbf\x24\x46\x69\x32\x51\x8e\xa0\xf0\x99\xd1\xd2\xd8\x11\xb8\xb2\xb1\xd5\x08\xea\xd4\x8d\x60\x6d\x95\x44\xbd\x56\x1a\x47\x50\x09\xdd\x10\xa5\xd8\xb9\x71\x2a\x7c\x56\x24\x17\x61\x83\xc8\xe3\x77\x24\xc1\x2d\x6a\x0f\x3b\xab\x3c\xda\x76\xeb\x27\xee\xe9\xe4\xb3\x22\xad\x47\xff\x9c\x7a\x46\xb0\x11\xf9\x46\x24\x57\xb4\xe1\x5b\xde\xcf\xcd\x13\x80\x71\xab\x2d\xfa\xb3\x34\xeb\x24\xb9\x31\xeb\x35\x5a\x9a\x3b\x06\xfa\x5b\xe9\x35\x94\xb8\xc5\xd2\xcd\x41\x62\xda\xac\x47\xa0\x74\x6e\x46\x80\xd6\x1a\x9b\x00\xdc\xd0\xe4\x9c\x07\x79\x11\x73\x27\x5e\x0e\xbc\x01\x5f\x28\x07\xb5\xf0\xc5\x04\xae\x73\xc0\xaa\xf6\xfb\x51\x98\x14\x16\xf9\xe4\x1e\x35\x11\x3a\x2f\xd1\xda\x49\x02\xf0\xba\xf1\x75\xe3\x7f\x51\x25\xce\xe1\xe8\x28\x49\x96\xec\x3d\x41\xa2\xe7\xc6\xf9\xa1\x1e\x7f\x69\xb4\xc6\x32\x3a\x18\x2d\x26\x82\x57\xa2\x6a\x75\x5f\x18\xe7\x13\x5e\xb9\x30\xd6\x43\xe3\x50\x42\x6e\x2c\x3c\x5f\xad\x16\xe4\x07\x55\xa3\x55\x26\xbc\x32\x1a\x84\x96\xcc\x72\x87\x29\x48\xe1\x8a\xd4\x08\x2b\x99\xe5\x6a\xb5\xa0\xd5\x73\xf8\x8f\xd9\x6c\xf6\x10\xb7\xdb\xc5\xc5\x21\x33\x5a\x76\xbb\xb8\x08\xab\xfe\x3e\xfb\x7b\x5c\x75\x8b\xbf\x35\xca\x92\x45\x9d\xca\x40\x34\xbe\x40\xed\xdb\xfd\x89\x11\xed\x1f\x83\xe5\x6c\x71\xed\xa0\x71\xa4\x7e\x01\xb5\x70\x6e\x67\x82\x38\xc7\xa4\x48\xda\x9a\x3c\x6f\x83\xe0\x1a\x8b\xa4\xc0\xda\x9a\x1a\x6d\xb9\x07\x8b\xce\x5b\x95\x79\x10\x59\x86\x2e\x5a\x81\xbc\x5e\xe7\x6a\x0d\xb9\x2a\x91\xb9\x3c\xc1\xc9\x7a\x02\x59\x51\x19\x09\x7f\x9b\xcd\x20\x67\x55\x4e\x02\xd9\x64\x5f\x95\x4f\x99\xec\x9c\x64\x3d\x6b\x7c\x11\x0c\x40\x7e\xf2\xc6\xa1\x9d\x93\x08\xf6\x24\x8e\x01\x2c\xa2\x84\x73\x10\x69\x76\xf2\xe3\x4f\x0f\x10\xff\xf8\x00\x71\x6e\x4c\x2a\xec\xa1\x76\xce\x51\x58\xb4\xf0\x8f\xb7\xab\xaf\x50\x51\xd0\x48\x70\x11\xd8\x19\xfd\x57\x0f\xa5\x68\x74\x56\xc0\xae\x40\x1d\x0f\xdd\xd8\xb0\xfe\xcd\xed\x0d\x64\x42\x6b\xe3\x21\x25\x17\x15\x12\xa3\x4a\x5f\x2b\x79\x70\xc8\x63\xa6\x8d\x4e\xf6\xfa\xfa\xf2\x82\xf7\x54\x19\x1e\x72\x6c\xc9\x97\x61\xf2\x82\xe7\xde\xd8\x92\x1d\xb7\xe5\x74\x51\x2a\x8a\xf2\xeb\x4b\x76\x31\x87\x99\x45\xcf\xde\xef\x38\xf8\x95\x2f\x78\x17\x6f\x36\xa8\x41\x69\x6f\x8d\xab\x31\x63\x81\x2d\xfe\xd6\xa0\xf3\xd0\xf1\x7a\x72\xfe\x80\xeb\x3c\x6d\xc5\x08\x3b\x5d\xcb\xc3\xdf\x4b\xde\xb1\x3f\xd9\xeb\x9a\x16\x09\x8a\xd9\x1c\x68\x2b\x95\x2b\xf2\x26\x0e\x55\x97\x99\x1a\x61\x2b\xca\x06\xa1\x6a\x1c\x2b\x4a\xe9\x5e\xc0\x96\x4d\x34\xd6\x92\xc8\xbf\x92\xb5\x68\xa4\x42\x9d\xfd\x01\xee\x67\x71\xc5\x3c\x38\xc8\xb5\xce\xca\x46\x22\x08\x38\xba\x10\x59\x81\xe3\x0b\x43\xda\x2a\xe7\xa0\xcd\x98\x53\xe0\x51\x08\xec\x02\x85\x44\x4b\x9c\x9f\xa1\x9f\xde\x28\xe7\x29\x28\x6a\xa3\x1d\x3a\xe6\xc4\xe1\x12\x92\x6f\x26\xb2\x82\x82\x2c\xdd\x93\xee\xd1\x56\x28\x95\xb0\xfb\xd6\xde\xec\x60\x97\xca\x51\x26\x26\xde\xbc\xf1\x1c\xbc\x6d\x30\x49\x6e\x17\x17\x41\xc5\x41\x6e\x4a\x03\xd1\x35\x85\x94\x16\x1d\x6d\x16\x5c\xf3\x2c\xfc\x1e\x64\xa5\x79\x9f\x16\x2e\x2c\x4a\xb2\xa6\x28\x1d\xbb\xf8\x43\x36\xfe\x5e\xd3\x43\x08\xef\x30\x19\x32\xe3\xdd\x44\xc0\xa3\x99\xd1\x3a\xfa\xb4\x57\x15\x9a\xc6\x93\xac\xab\xf0\xe7\x1c\xfe\x36\x73\x81\x8e\xee\xc9\x4a\xbc\x57\x55\x53\x81\x6e\xaa\x14\x2d\x07\xa1\xaa\xd0\x81\x2f\x84\x07\xd1\xc5\xc4\x4e\x95\x25\xf9\x8f\x45\x6f\x55\x4c\xc4\xb9\x50\x65\x63\x31\x66\x05\x62\x0f\x29\xfa\x1d\xa2\x8e\x64\xa4\xe0\xb2\x34\x3b\x07\x42\x03\xbe\xaf\x8d\x0e\x8a\xe7\x4b\xd6\xe4\x39\x38\x2f\xac\x67\xad\x7a\xf8\x99\x82\xd5\x68\x19\x7c\xa6\xa9\x49\x55\x27\x50\x29\xdd\x78\xd2\xd1\x4b\xf1\xfe\x36\x30\x9d\xc3\xc9\xac\xbd\xe5\x5d\x56\xa0\x6c\x4a\x72\x3f\xd7\xdf\x10\xa4\xe1\x97\x8c\x13\xee\xa2\x8f\x49\xb2\x6c\x57\xb4\x57\xdc\x0e\x4c\x1e\x6f\x45\xdb\x68\x10\x43\x9e\x1e\x6d\x77\xc3\xb4\x0b\x6f\x05\x61\x8d\x13\xd7\x2d\xaf\x84\xde\x83\x17\x6e\xc3\xd6\x6d\x57\x53\x3c\x18\x8d\x0f\xf3\xb8\x28\x1a\xbd\xe1\x73\xb4\x4c\x4a\xa3\xd7\xb4\x7c\x27\x94\xef\xb4\xd8\xd4\x52\x78\x74\x90\x62\x6e\x2c\x99\xca\x6e\x82\x0b\x6a\x23\x11\x24\x0a\xf6\xc1\x57\x46\xe2\x42\xe9\x75\x67\xdf\x93\xea\x61\xb6\xa4\x9a\xb8\x96\x21\x80\xb0\x7e\x74\x97\x37\xa9\xee\x1e\xf7\x6b\xad\x7c\xc7\xfd\xe7\x2a\x49\x68\x70\xde\xba\x7f\x84\x19\x91\xf3\xf5\x65\xe7\x2b\xa2\xf1\xa6\x12\x14\x53\x65\xb9\x87\x35\x6a\xd2\x44\xb8\x03\xae\x2f\x03\xda\x88\x2c\xba\x5d\x0b\x41\xa7\xa5\xcc\x2c\x4b\x64\x81\xe9\x04\x48\x26\x15\x31\x73\x05\x39\x46\xa0\xa2\x53\xba\xa2\xf1\x20\xcd\x4e\x07\x37\x1c\x9f\x40\x85\x42\x93\x03\xa3\x45\x72\x0b\x6d\xba\x28\x80\x59\x3b\x19\x06\x40\x55\x9c\x81\x3c\x96\x7b\x10\xb9\xc7\xe0\x3b\xb9\xb2\xce\xb3\x49\x0f\xe2\x66\x7c\x12\xe3\xe6\x8c\xb5\x12\xb6\x3f\x3c\xa4\xb7\x7b\xd2\xad\x44\x8f\x99\x87\x1d\xc5\x90\x45\x67\x1a\x9b\x61\xc0\x60\xa2\x03\x9a\xde\x80\xf2\x41\xe6\x4b\xcc\x95\x26\xed\xdf\x76\xb4\x31\x4f\xf3\x3e\x87\xd7\xaa\xd9\xa2\x25\x3c\xec\x42\x9e\x4f\xb1\x10\x5b\x65\x18\x8e\x75\xcb\xc9\x36\x9c\xeb\x16\x6f\x5c\xbf\xe5\xa4\x1d\xad\x1b\x37\x07\x4e\x87\x9c\x48\xcf\x5e\xf6\x34\x23\xce\xe3\xe7\x2d\xe9\xad\xa8\x9e\xa5\x73\x98\x4d\x3a\xea\x4b\xe5\x36\xe0\x6a\x91\xe1\x67\x17\x11\xc9\x60\xd5\x31\xfc\xc2\x76\xdc\x8d\x19\xd9\x82\x6f\xe8\xac\x93\xfb\xe1\xe7\xf6\x3a\xeb\x6f\xe8\x7b\x60\xf3\x0d\x47\x43\x08\xbf\x9f\x5d\x92\xbc\x35\x76\xd3\x86\x31\xe1\x57\x07\x99\x45\x72\x30\x90\x8d\x25\x6d\xd6\xd6\x50\xce\xa5\x3f\x5b\x97\x6c\x21\x30\xab\x57\x39\x90\xca\x62\xe6\x8d\xdd\xd3\x06\xc4\xf0\x52\xd9\x39\x4c\xa6\x21\xc5\x8e\x77\xc6\x6e\xc6\x52\xd9\x3f\x74\x8c\xda\x94\x25\xbb\x6e\x26\x74\x46\x27\x50\x6b\x2d\x4a\xca\x17\x0b\x53\x96\x4a\xaf\xfb\x23\xfc\x11\xe5\x20\xc1\x19\x2f\x4d\xe3\xa7\x68\x2d\x7b\x27\x41\xfb\x2e\x49\xc4\x9b\xe5\x9e\xda\x08\xaf\x79\x1f\x62\x5b\x31\xd9\x2c\xa8\xc3\xa2\x6b\x4a\x1f\x3d\xcd\x91\xd7\x63\x29\xc9\xa1\x88\x36\x70\x95\x94\x0e\x95\x5e\x97\x21\xee\x98\x5b\x1f\x26\xf8\x1e\xb3\xc6\x1b\x0b\xf8\x5e\x79\xbe\x05\x6e\xcc\xfa\xae\x95\x68\xc9\x4b\xf1\x1e\xd2\x7d\x14\x92\xa1\x03\xeb\x67\x70\x9a\x16\x96\xc4\x43\x45\x5e\x2b\xa1\xca\xa5\xfa\x40\xe9\x76\x36\x9b\xcd\xe0\x18\x4e\x66\xf0\xe2\x3c\x30\x7d\x65\x6c\x15\x62\x8e\xca\x08\xf6\x05\x90\x58\x22\x6d\xa3\xbc\xe3\x21\x3a\x49\x67\xe2\x28\x79\x90\xba\x53\xf2\x8a\x94\x62\x18\x49\x81\x0c\xc8\x23\x5e\x7e\xc3\xc8\xba\x41\xb1\xc5\xce\x3f\x72\x51\x3a\x0c\x52\xdc\xa8\x4a\xf9\x90\xbf\xba\x0b\x34\x33\x3a\x6b\xac\x25\xbc\x43\x79\x89\x90\xaf\x9b\x36\x35\xff\x1f\x6e\xb2\x85\xb0\xa2\x2c\xb1\x5c\x59\xa1\x5d\x4e\xd5\x61\xb8\xd3\xc6\x8f\xfb\x2f\x39\x86\xb6\x50\xa7\x2b\x58\x4e\x8d\x05\xae\x49\x21\x16\xa5\xd3\xe7\x42\xcb\x12\xad\x7b\xfc\xad\x93\x73\x53\xfa\xcb\xf3\x79\x84\x29\x14\xd4\xc1\x41\xbb\xbe\x44\x04\x3f\x34\xf7\x40\xc8\xc5\xdf\x13\x99\x26\xc9\x25\x57\xda\x2d\xb3\x73\xe1\x90\xab\x52\x6f\xe8\xca\x67\x57\x6a\x6b\x71\xf0\x6c\x40\xca\xda\xf4\x47\x4b\x7a\x80\x99\xce\xde\x2e\xc1\xe2\x5a\x19\xcd\x29\x93\xfe\xe8\x2a\x08\x9a\x3b\x0b\x48\x6d\x83\x7b\xb8\xbe\x4c\x00\x5e\xe0\xfe\x60\x3e\x20\xfc\x96\xec\x05\xee\x19\x77\x32\xea\xe7\x3b\xed\x2a\x74\x03\xe2\xc9\x2d\xe6\xea\xfd\x50\x54\xa5\x25\xbe\x47\x07\x4f\xc8\xd9\x47\xa1\x29\xe1\x46\x7c\xfd\x39\x42\x79\xd7\x34\x1f\x96\x1d\x88\x3d\x28\x91\x62\xbf\xc1\xa1\xb0\x59\x31\xcc\x90\xb7\x37\x73\x28\xbc\xaf\xe7\xd3\xe9\x00\xfa\xfe\x38\x63\xbc\xf4\xcc\x18\x0a\xe4\x8b\xd2\x34\x92\xfd\x22\x44\x22\xc7\x5c\x6b\x94\x49\xd2\x4d\x90\xfc\x0b\x6b\x7e\xc5\xcc\x77\xc7\x6f\xed\x28\xb2\xcc\x34\x04\xe7\x87\x58\x5a\x85\x1b\xa6\xaf\x4b\xb8\x09\x51\x1b\xe7\x14\xdf\x11\x43\xe2\x87\x21\x82\x54\x2e\xa3\xeb\x0d\x25\xf3\xc9\xad\xa9\xc2\x79\xf5\x56\x59\xa3\x2b\xd4\x7c\x61\x0e\x10\x7c\xdf\xb7\x78\x69\xf4\xba\x73\x11\x2a\x00\x1c\x14\x86\xf2\x19\x37\x80\x42\x41\x80\x6e\x00\xec\x51\x46\xcd\x71\xe6\xe2\x15\xe1\xda\x1c\x0f\x9a\x19\x7c\x9d\xb5\x0e\xab\xdc\xa1\x03\xb3\x13\x32\xe8\xa4\x4b\x4b\x69\x88\x32\x0c\xb2\x5c\x48\xc6\xb4\x82\x2b\x9b\xae\x6b\x36\xb0\xeb\xaa\x85\x22\x51\xd4\x8a\x35\x1b\x71\xf8\x1d\xec\x16\xcb\x11\x82\xaa\x5c\x61\x49\xae\xbb\x83\xb2\x18\xb3\xb4\xc8\x9f\x50\xa2\x96\xc0\x95\x0c\x21\x70\xc2\xd3\x54\x91\x30\x84\xe8\xd0\x85\xa3\xdb\xd1\x68\xb2\x53\x28\xd4\x7a\x51\x3e\xa0\x35\xa3\x50\xaa\x88\xb2\x84\x4a\xec\x21\x2d\x4d\xb6\x21\x41\x90\xab\x7f\xa1\x78\x9b\x20\x58\x5f\x71\xb4\x15\x5f\x8a\x80\x8e\xa2\x51\xb9\x22\x60\xbe\x21\x82\x6c\x8b\x19\x56\x21\x49\xda\x16\x32\xdc\xd9\xb2\xc1\xec\xd9\x9d\x4a\x8d\xc6\x94\x56\x5c\x41\x1c\xd6\x6b\xcc\x4f\x12\xdc\x36\xfa\xd0\x46\x92\xa0\x15\x4a\x2a\x38\x69\xfc\xb2\x4f\x3e\x58\xb2\x54\xad\x14\xd1\xc7\xfb\x82\x8a\x9c\xea\x85\xc8\x37\x62\xde\xd5\x95\x9d\x83\x30\xe9\xca\xd4\x2a\xeb\x4c\xf9\x2d\x92\x77\xec\x6c\xc2\x79\xec\x49\x7e\x83\x2c\xfd\x7c\x75\xc1\x0d\xd7\x10\x37\xab\xc6\x6a\xa0\xc2\x8c\x93\x82\xf3\xc2\x53\xc5\x47\xf7\x99\x2a\xd1\x4e\xe0\x6d\x81\x1a\x50\x53\x6a\x95\xa3\x16\x6a\xf4\xbd\x38\x74\x3d\x7c\x7b\xbe\xb8\x60\x96\x7d\x35\xe5\x0d\xe4\x4a\xcb\xb6\x54\xe2\xfa\xd2\x22\x38\xdf\x64\x1b\xf2\x48\x01\xbf\x35\xd8\x50\x58\xf2\xbe\x84\x2b\xac\x35\x96\x40\x88\x96\xb1\x28\x8c\x50\xa7\x85\x0a\x81\x92\xb2\x91\x95\x04\x53\xf6\x83\xfe\xc1\x6d\x27\x77\x6c\x20\x84\xae\x57\x1c\x24\x80\x42\x7e\x5e\xf4\x18\xab\xb8\xd7\xab\xe6\xdf\xc2\xa2\x0b\x1b\x71\xdc\x84\x43\xff\xd5\x75\xfd\xec\xe8\xef\xbe\x30\x8e\x94\x55\x1b\xeb\x7b\x7f\xeb\x89\x0e\x76\xa6\xeb\x9e\x82\x60\x85\x55\x5d\x0a\x8f\x5d\x1a\xeb\x87\xe6\xf0\xbf\xec\x6c\x8d\x56\xe4\x79\x08\xa7\xb0\x15\x5a\x95\xa5\xe0\xe1\x35\x7a\xd4\x5b\x38\x85\x55\x38\x1a\x44\x5c\xc3\xa5\xc5\x29\x7c\xfc\x38\xb9\xea\x7e\x7f\xfa\xc4\x04\xc2\xae\x1b\x4a\xa1\x0e\x4e\x5b\xbc\x44\x05\xef\x78\x1c\x9b\x11\x1f\x3f\x4e\x42\x4b\xed\xd3\x27\x18\x8f\x49\xbf\x63\x25\x69\x74\x25\xdc\xe6\x5a\x46\x2e\x04\x39\x99\x7f\x44\x43\x9f\x3e\x4d\x43\xcb\x7e\xcc\x37\xd9\xb8\x34\xeb\x20\x0e\xd9\xee\x2e\x65\xbc\xe3\x43\xf7\x99\xc9\x0c\xb7\x9f\x3f\x4f\x67\x1a\xcf\x74\xae\x30\x4d\x29\xdf\xf9\x08\x98\xde\xe5\x0c\xf8\x4f\xe1\x7f\xae\x96\x3c\x4f\x79\xf0\x9d\x37\x3d\x41\xc7\xf8\xf5\xab\x77\x57\xff\x7d\xbd\x7a\xf7\xfa\xf6\xdd\xd5\x7f\x5d\x5f\xac\x98\xfc\xe3\x47\x95\x83\x46\x98\x50\x2d\x04\x33\x18\xc7\xd3\x7d\xfc\x58\x5b\xa5\x7d\x0e\x47\xb1\xf1\xf1\x2e\x23\x82\x53\xf8\x8b\x3c\x0a\xc4\x1d\xe1\x18\x50\xcb\xee\x57\x64\xc7\xf5\x12\x15\x3e\xbf\xc3\xb1\xc2\x8a\xd0\xe8\x29\xfc\x65\x32\xcb\xe1\xd9\xf9\x51\x5c\xf6\xfb\x9c\x43\x51\xf5\x05\xd6\x92\x8a\xb3\x21\xe3\xb0\xea\x1e\x67\xfe\xc9\xd1\x96\x24\x8b\xf3\xe5\x9f\xc1\xff\x9d\x06\xff\xf1\xbf\xa5\x4a\x4f\x53\xe1\x8a\xf0\x73\x71\xbe\x84\xf1\xab\x7b\x31\x19\xc6\xcd\x97\x62\x28\x90\xe1\x97\x42\xf2\xcb\xb1\x11\x18\x95\x01\xb3\x9e\x9e\xcc\xeb\x5a\x9f\x3e\x42\x80\xb4\x6c\x2b\xac\x4e\xc9\x85\xd7\xe9\x23\x84\x46\xcb\x94\x12\x46\xcf\xf5\xf7\xe2\xe2\x4e\xee\xfc\xca\x5c\x79\x7d\x79\x60\x96\xe4\x99\x55\xf2\x8a\xdf\x2c\xe7\xff\x9c\xad\x7f\x78\xd0\xd2\x3f\x7c\x8d\x9d\x7f\xf8\x0a\x2b\x13\x51\x67\xc1\xaf\xb5\xfb\x0f\x30\xae\x11\xaa\x5a\x3d\x46\x3e\x0c\x12\x14\xef\xb6\xad\xbd\x9f\x3d\x86\xb9\x23\xd3\xdc\xa9\x0f\xd8\x71\xfd\xf6\xe6\x5e\x96\x8d\xad\xfe\xcc\xa3\xdf\x6d\x1e\x9d\x1e\x06\xd7\xf2\xfc\x6c\x75\xf1\x1c\xc6\xe3\x5f\x4d\x3a\xe6\x22\xe4\x5e\xa4\x75\x24\x3a\xe8\xfa\xe4\xce\x70\x00\x38\x5f\x8a\xb2\x8e\x3c\xe2\x91\x2f\x84\xee\x57\xc4\x60\xc7\x91\x90\xc9\xb8\x46\xcb\xfe\xf8\x28\x01\xd9\xb1\xae\xb0\x62\x10\xf1\x28\xe0\xa4\x67\xeb\xab\xba\x67\xfb\xed\x63\x92\xdb\x35\xe7\xc2\x67\x05\x48\x74\x99\x55\x69\x74\xfb\xc3\x86\x7a\x5b\x5a\x9e\xbd\x5d\x42\xa0\xbe\xf7\x68\xd4\xf2\x79\xd4\x00\xef\xf6\x6b\xbd\xff\x6e\x60\x6b\x2e\xb4\xf9\x9d\x26\xc4\x6f\x1f\xbb\xdf\x7d\xdc\x0e\x0f\xf7\x60\xd4\x1e\xc3\x3f\x4c\x1a\x1e\x3e\xd8\x0a\x99\xd0\xdc\x33\x50\xbe\x40\x7e\xa6\xe2\xef\x4e\xa2\x65\x2a\xf1\xc1\xe8\xee\x79\x03\x5e\xd1\xdc\x93\xb3\xdb\x57\x4f\xe9\xc8\x07\x7c\xe6\x70\x14\xa3\x8a\x22\x5b\x62\x7e\xd4\xee\xf5\x9f\x94\x17\xff\xb5\x6d\x98\xc5\xe1\x0e\x9c\x6d\x8f\xee\xf4\x15\xdb\x3e\x5d\xf7\x26\x0f\xbf\x9a\x34\x24\xe6\xf0\xe1\x8b\x89\x4f\x15\x4c\x45\x73\xb2\x57\x84\xba\xd7\x96\xec\x1b\x90\xc3\x36\xe3\x31\xbc\x68\x52\xb4\x9a\x1b\xde\x5f\xe3\xdf\x03\xf2\x7b\x0e\xde\xcf\xcd\xbb\x97\xe1\xae\xbd\xcf\x2d\x2e\x6f\xe2\x40\xb8\x35\xdc\x64\xf0\xcd\x54\x4b\xe9\xe6\x20\x4d\xb6\x41\x3b\x82\x4d\xc7\x30\x01\xb8\x8a\xf3\x73\x38\x0a\xf3\x47\xf0\x98\x81\xf4\x62\xb8\xd7\x83\x91\xf4\xff\xfd\x8a\x3c\xf0\x15\x72\xeb\xf0\x80\xe7\x0d\xb8\x5a\xec\x34\xb9\xa0\x8b\x4d\xcc\x04\x7a\x82\xae\xef\xfb\x52\xb8\xf0\xcd\x1c\x65\x47\xf2\x57\x1f\x2f\xd8\x09\x2c\x11\x43\xcf\xd9\xcd\xa7\xd3\xde\xea\x13\x65\xa6\xd2\x64\x6e\x6a\x31\x47\x8b\x3a\xc3\x69\xf7\x00\x3c\x20\x1b\x8b\x5a\x4d\xb7\x27\x93\x93\x7f\x9f\x1e\x53\x38\x6d\x4f\xe2\x47\x7d\xc3\x3b\x3c\x0a\x31\xbc\xe7\xdb\x6e\x69\x3d\x78\x58\xa8\x82\x90\x07\xe2\x3d\x04\x0f\xc2\x57\x20\x87\x6f\xaa\xf9\xdd\x08\x69\x5d\x7a\x92\xb4\xf9\xa3\x63\xda\x7f\x67\xd0\x3d\x25\x75\x9e\xc2\xbd\xe4\xd6\xdd\xef\x9d\xe0\xee\xc4\xe7\x4e\xd2\x45\xde\xf0\x1c\x0f\x2d\x8e\x99\xe0\xb1\xbb\x82\xc7\xb0\xf4\xc6\x8a\x35\x7e\x83\x86\xe3\xf1\xbf\xf0\x28\xf0\xb9\x27\x81\xe4\x18\x6e\x4c\x26\x42\x91\x07\x6e\xef\x3c\x56\x93\x84\x87\xe2\x41\x42\x56\x7b\x5b\x28\x8f\xa5\x72\xdc\x5e\xe7\x26\xff\xe0\x75\x90\x0c\xe0\x60\x57\xa8\xac\x68\x53\x8d\x72\x20\xca\xd2\xec\x42\xfa\x0b\x5f\xf0\xf0\x63\x41\x18\xbc\x54\x7d\x47\x78\x32\x25\x29\x9e\xaf\x56\x8b\xb8\x63\xf7\x41\x8a\x37\xdd\x2b\x20\xd4\x4d\x5a\xaa\x0c\x42\xf3\x2a\xb6\xaa\x77\x98\xc2\x56\x09\x10\xf0\xec\x6a\xd5\x7e\x6f\x33\x49\x06\xac\xe6\x07\xef\x04\xe4\x78\x14\x6f\x4f\xdc\xd3\xe1\x0a\x77\xd0\x62\xff\x69\xe6\x92\x24\xdc\x67\xcb\x9f\xe6\x7d\xb2\x92\xed\xe3\xe5\x23\x7f\xfe\x73\xe7\xeb\x9c\xc7\x7a\x4a\xeb\xe3\x14\xf9\x45\x85\xf4\xda\x7e\xa0\xcb\x32\x2c\x7f\x82\xda\x9a\xad\x92\x68\x1d\xb8\x26\x2b\x40\x38\x78\xa9\xb4\x32\xed\x7b\xe7\x05\xd6\x45\x72\x0c\xcf\x28\xf9\xa8\x8c\x94\x11\xbe\x94\xec\x15\xc2\x49\x3b\x7c\x2a\x79\xa5\x65\x6d\x94\x0e\xbb\x87\xa1\x56\xe4\xf0\x6b\x28\x5c\x78\x4f\x1b\xd8\xe8\x21\x1d\x7f\xc7\x2f\x66\xcb\x9d\xca\xfd\xc3\x72\xbf\x71\x68\x5f\x7d\xe6\x51\x04\xe0\xac\xf1\x05\x3f\x35\xc6\x5a\x4b\x0b\xed\x07\xd4\x61\x20\x7e\xe1\xd3\x42\x99\xc1\xfc\x31\xfc\x3c\x9b\xc1\xcb\x73\x92\xab\x68\xf4\x66\xa9\x3e\xe0\xf9\x9e\xa0\x07\x4d\x84\x7f\x49\xf2\xcb\x81\xfb\xdf\x17\xb1\xff\xda\x69\xe6\xa2\xc4\x73\x38\x12\xda\xe8\x7d\x65\x1a\x77\x47\xec\xc1\xf8\xff\x05\x00\x00\xff\xff\x5a\xbf\xb8\x99\x38\x2f\x00\x00")

func configDefaultConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_configDefaultConfigYaml,
		"config/default-config.yaml",
	)
}

func configDefaultConfigYaml() (*asset, error) {
	bytes, err := configDefaultConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/default-config.yaml", size: 12088, mode: os.FileMode(384), modTime: time.Unix(1708006685, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configHtcondorTemplateTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xcd\x6e\xea\x30\x10\x85\xf7\x7e\x8a\x11\xd2\x5d\x26\x97\x17\xc8\xa6\x80\x10\x9b\x22\xd1\xa8\x3f\x2b\xcb\xe0\x49\xb0\xe2\x8c\x61\xec\x09\xad\xa2\xbc\x7b\x15\x40\xad\xa8\x4a\x77\x47\x3e\xdf\xf9\x3c\x42\xae\x43\x8e\x08\x05\x74\x86\x9c\xf7\x46\xd5\x98\x90\x3a\x28\xa0\x64\x41\x85\xef\xb8\x93\x64\xb6\x7e\x44\x2a\x21\x42\xaf\x0c\xd7\xd2\x22\xa5\x08\x05\x9c\x02\x37\xc8\xc0\x42\x90\x65\xc9\xc4\x66\x35\x87\xbe\xcf\xcb\x31\xd9\x61\x50\x3e\xd4\x50\x8c\x2f\x2f\x81\x9b\xb9\xe3\x61\xf8\xbf\x0b\x64\x03\x67\xd8\x21\xa5\xcc\x87\x5a\x21\x73\xe0\x9f\xd4\xe5\xaf\x2c\x26\x8b\xcc\x2a\x48\x3a\x48\xba\xcf\x04\x49\x2a\xee\x83\x78\xab\x13\x1b\x8a\x15\xb2\xae\x9c\xc7\xf1\xc4\xb7\xc5\x93\x3a\xed\x91\x74\x0a\xdf\xe5\x97\x70\xfd\xa8\x17\xaf\xab\x52\xaf\x37\x7a\xf1\xbc\x9a\x95\xaa\xef\x5d\x05\x84\x90\xcf\x0e\x12\x61\x0a\xd9\x30\xa8\xbe\x3f\xb0\xa3\x54\xc1\x84\xf1\x28\x18\x93\xde\x8d\x65\x01\xff\xec\xe4\x02\x9e\xa1\x0c\x90\xec\x39\x5d\x15\x1b\xd3\x2e\xb7\x30\xcd\xef\x59\x5a\x6c\x03\x7f\x8c\x9e\x7c\x5a\xc1\xf2\x61\x72\x9d\xfc\x6e\x9b\xbb\xd8\xfc\xa9\xb3\x2e\x36\x37\xb2\xcb\xe2\xc6\xa6\x8e\x82\x82\xea\x33\x00\x00\xff\xff\x61\xe0\x01\xde\xf9\x01\x00\x00")

func configHtcondorTemplateTxtBytes() ([]byte, error) {
	return bindataRead(
		_configHtcondorTemplateTxt,
		"config/htcondor-template.txt",
	)
}

func configHtcondorTemplateTxt() (*asset, error) {
	bytes, err := configHtcondorTemplateTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/htcondor-template.txt", size: 505, mode: os.FileMode(384), modTime: time.Unix(1705929562, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configKubernetesTemplateYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xcb\x6e\xdb\x30\x10\xbc\xeb\x2b\x16\x0a\x7a\x94\xa5\x5c\x7a\xe0\xcd\x48\x82\xb4\x45\xad\x04\x45\x90\x3b\x45\xad\x62\xc2\x7c\x95\x4b\x39\x30\x0c\xfd\x7b\x41\x51\x6e\x2d\xbf\x0e\xe5\x89\xdc\x21\x67\x66\xd7\x63\x71\x27\xdf\xd1\x93\xb4\x86\x41\xc3\x83\x58\x97\xdb\xfb\x6c\x23\x4d\xcb\xe0\x87\x6d\x32\x8d\x81\xb7\x3c\x70\x96\x01\xdc\xdd\xc1\xe3\x0b\xd4\x2f\x6f\xf0\xf0\x6d\x59\x3f\x3f\x41\xbd\x5c\x3d\x65\x00\x86\x6b\x64\xb0\xdf\x2f\xde\x38\x6d\xbe\xb7\xc3\x30\xd5\xc8\x71\x91\x80\xfa\x70\x1a\x86\x8c\x1c\x0a\x06\x19\x40\xc3\xc5\xc6\x76\xdd\x4f\xa9\x65\x60\x50\x65\x00\xc2\x6a\xa7\x30\x48\x6b\x88\xc1\x7d\x06\x10\x50\x3b\xc5\x03\x46\x75\x80\xf1\xe5\xb8\x03\x20\xf4\x5b\x29\x70\x29\x84\xed\x4d\xa8\x47\x07\x5d\x6f\x0c\xaa\x82\xf8\x74\xc7\x23\x05\xee\xc3\xab\x55\x52\xec\x18\xd4\xb8\x45\x3f\x41\xc2\x9a\xc0\xa5\x41\x4f\xa3\x95\xb4\x8a\xa9\x93\x89\xe7\xd3\xfa\x0d\xfa\x62\xde\xd7\x61\x49\xcd\x3f\x90\x81\x5d\x53\x1f\x5d\x37\xd2\x96\xd3\xb3\x56\x9a\xb6\xf0\xd6\x06\x85\x44\x2c\xba\xa7\x70\xfa\xf0\xb5\x57\xea\x60\x6b\xa9\x3e\xf9\x8e\x8e\x6e\x70\xff\x41\xec\xe8\x1c\x8d\xe5\xc9\x4c\x7e\x5a\xf6\xbd\x39\xab\x15\x85\xb0\xa6\x93\x1f\x67\x40\x89\x41\x94\x09\x2b\xe7\x3d\xa6\xe2\x62\xa7\xd5\x05\xb6\x10\xbb\x7f\x3c\x05\x2e\x8f\xc5\x23\xd9\xde\x0b\x3c\x69\x20\x02\xbf\x7b\xa4\x70\x56\x07\x10\xae\x8f\x19\x91\x1d\x18\x84\xc5\x83\xeb\x09\x2a\x28\x86\x61\xbf\x1f\x0f\x71\x03\xa8\x08\x21\xee\xf2\xfb\xaa\xd2\x79\xdc\xa1\x99\x2b\xa7\xa5\x51\x5b\xbf\x3b\xe2\xfb\xc5\xf5\x73\x03\xd5\x62\xa2\x74\x5e\x9a\xd0\x41\xfe\x65\x51\x75\xcf\xf9\x04\x8f\x74\x8a\x30\x09\x7c\x5d\xdd\xe0\x47\xb7\x46\x8d\x9e\xab\x82\x82\xf5\x63\x04\xfe\x4a\x3d\x4a\xda\xdc\xd2\x4a\xf8\x5c\xac\xaa\x2e\xab\x6d\xad\xea\x35\xae\x62\xb6\xcf\xb2\x30\x0b\xe9\x64\xe3\x4a\x4a\xc7\x91\x44\x92\x57\x1e\xd6\x0c\x4a\xeb\xc2\xf4\xcb\x1f\x07\xa0\x68\xa5\x2f\xaf\x13\x50\xdf\xa4\xe7\xd7\xae\x1c\x2c\xa5\x14\x15\xc9\xfb\x0d\x17\xff\x62\x98\x65\xc7\xed\x5e\xfa\x2f\x5e\xe3\x4c\xf5\x15\x77\xf3\xe9\xcc\x66\x33\x69\xfc\xd7\xe4\x5c\xfc\x26\x52\x40\x13\xde\x47\xe9\x07\xc5\xa5\x9e\x6b\x89\x58\x4a\x5f\x9e\x03\x97\xdb\x0a\xf8\x13\x00\x00\xff\xff\x57\x40\xab\x27\x51\x05\x00\x00")

func configKubernetesTemplateYamlBytes() ([]byte, error) {
	return bindataRead(
		_configKubernetesTemplateYaml,
		"config/kubernetes-template.yaml",
	)
}

func configKubernetesTemplateYaml() (*asset, error) {
	bytes, err := configKubernetesTemplateYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/kubernetes-template.yaml", size: 1361, mode: os.FileMode(384), modTime: time.Unix(1705929562, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config/gridengine-template.txt":           configGridengineTemplateTxt,
	"config/pbs-template.txt":                  configPbsTemplateTxt,
	"config/slurm-template.txt":                configSlurmTemplateTxt,
	"config/kubernetes-executor-template.yaml": configKubernetesExecutorTemplateYaml,
	"config/default-config.yaml":               configDefaultConfigYaml,
	"config/htcondor-template.txt":             configHtcondorTemplateTxt,
	"config/kubernetes-template.yaml":          configKubernetesTemplateYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"config": {nil, map[string]*bintree{
		"default-config.yaml":               {configDefaultConfigYaml, map[string]*bintree{}},
		"gridengine-template.txt":           {configGridengineTemplateTxt, map[string]*bintree{}},
		"htcondor-template.txt":             {configHtcondorTemplateTxt, map[string]*bintree{}},
		"kubernetes-executor-template.yaml": {configKubernetesExecutorTemplateYaml, map[string]*bintree{}},
		"kubernetes-template.yaml":          {configKubernetesTemplateYaml, map[string]*bintree{}},
		"pbs-template.txt":                  {configPbsTemplateTxt, map[string]*bintree{}},
		"slurm-template.txt":                {configSlurmTemplateTxt, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
